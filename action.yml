name: 'Miqa Test Kickoff'
description: 'Kick off jobs on Miqa and status checks in GitHub'
inputs:
  INSTALLATION_ID:
    description: 'App Installation ID for the miqa-status-check Github App'
    required: true
  GITHUB_TOKEN:
    description: 'GitHub token'
    required: true
  TRIGGER_ID:
    description: 'Miqa test trigger ID'
    required: true
  DOCKER_URI:
    description: 'Docker URI for version to test on'
    required: true
  MIQA_ENDPOINT:
    description: 'Root URL for Miqa (proxy or app domain)'
    required: true
  CHECK_NAME:
    description: 'Name to display in checks status'
    default: 'Triggered Miqa Test'
  SHA:
    description: 'github.sha'
  REPOSITORY:
    description: 'github.repository'
  COMPONENT_IDS:
    description: 'Specific component IDs to update (if docker is not registered to component watchers)'
    required: false
    default: ''
  ADDITIONAL_INSTRUCTIONS:
    description: 'Additional custom instructions to pass as query parameters to the trigger. Prefix with &.'
    required: false
    default: ''
  MIQA_GITHUB_APP:
    description: 'Base URL for Miqa GitHub App'
    required: false
    default: 'http://miqa-github.herokuapp.com'
runs:
  using: "composite"
  steps:
      - name: Fetch commit SHA
        id: fetch_sha
        uses: octokit/request-action@v2.1.0
        with:
          route: GET /repos/{repo}/commits/{sha}
          repo: ${{ inputs.REPOSITORY }}
          sha: ${{ inputs.SHA }}
        env:
          GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      - name: Save commit SHA
        shell: bash
        id: get_sha
        run: echo "::set-output name=parent_sha::${{ toJSON(fromJSON(steps.fetch_sha.outputs.data).parents[1].sha) }}"
      - if: steps.get_sha.outputs.parent_sha != 'null' 
        shell: bash
        run: |
          echo "NEW_SHA=${{steps.get_sha.outputs.parent_sha}}" >> $GITHUB_ENV
      - if: steps.get_sha.outputs.parent_sha == 'null' 
        shell: bash
        run: |
          echo "NEW_SHA=${{ inputs.SHA }}" >> $GITHUB_ENV
      - name: HTTP Request - Create Check Run
        uses: fjogeleit/http-request-action@v1.11.0
        id: trigger_1
        with:
          url: '${{inputs.MIQA_GITHUB_APP}}/create_check_manual'
          method: 'POST'
          timeout: 30000
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"installation_id":"${{inputs.INSTALLATION_ID}}","repository_full_name":"${{ inputs.REPOSITORY }}", "head_sha":"${{ env.NEW_SHA  }}", "check_name":"${{inputs.CHECK_NAME}}", "gha_version":"1.1.2", "gh_user":}'
      - name: Set Check Run ID
        shell: bash
        id: set_check_run
        run: |
          echo  "CHECK_RUN_ID=${{ fromJSON(fromJSON(toJSON(steps.trigger_1.outputs.response))).id }}" >> $GITHUB_ENV
      - name: HTTP Request - Miqa Trigger
        uses: fjogeleit/http-request-action@v1.11.0
        with:
          url: '${{ inputs.MIQA_ENDPOINT }}/trigger_test_auto/${{ inputs.TRIGGER_ID }}?app=gh&uri=${{ inputs.DOCKER_URI }}&allow_override=1&event_id=${{ env.CHECK_RUN_ID }}&repo=${{ inputs.REPOSITORY }}&commit=${{ inputs.SHA }}&gha_version=1.1.2&specific_components=${{ inputs.COMPONENT_IDS }}${{ inputs.ADDITIONAL_INSTRUCTIONS }}'
          method: 'POST'
          timeout: 30000
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"repo":"${{ inputs.REPOSITORY }}", "commit":"${{ inputs.SHA }}"}'
